import { MicroCMSListResponse, MicroCMSListContent, MicroCMSObjectContent, MicroCMSQueries } from 'microcms-js-sdk';
import { useFetch } from 'nuxt/app';
import type { FetchError } from 'ofetch';
type MicroCMSGetListArgs = {
    endpoint: string;
    queries?: MicroCMSQueries;
};
type MicroCMSGetListDetailArgs = {
    endpoint: string;
    contentId: string;
    queries?: MicroCMSQueries;
};
type MicroCMSGetObjectArgs = {
    endpoint: string;
    queries?: MicroCMSQueries;
};
type FetchOptions<T extends unknown> = Omit<Parameters<typeof useFetch<T, FetchError, string, 'get'>>, 'baseURL' | 'query' | 'method'>[1];
export declare const useMicroCMSGetList: <T>({ endpoint, queries }: MicroCMSGetListArgs, fetchOptions?: import("nuxt/app").UseFetchOptions<MicroCMSListResponse<T>, MicroCMSListResponse<T>, import("nuxt/dist/app/composables/asyncData").KeysOf<MicroCMSListResponse<T>>, null, string, "get"> | undefined) => import("nuxt/app").AsyncData<MicroCMSListResponse<T> | null, FetchError<any> | null>;
export declare const useMicroCMSGetListDetail: <T>({ endpoint, contentId, queries }: MicroCMSGetListDetailArgs, fetchOptions?: import("nuxt/app").UseFetchOptions<T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate extends infer T_1 ? T_1 extends T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate ? T_1 extends void ? unknown : T_1 : never : never, T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate extends infer T_2 ? T_2 extends T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate ? T_2 extends void ? unknown : T_2 : never : never, import("nuxt/dist/app/composables/asyncData").KeysOf<T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate extends infer T_3 ? T_3 extends T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate ? T_3 extends void ? unknown : T_3 : never : never>, null, string, "get"> | undefined) => import("nuxt/app").AsyncData<import("nuxt/dist/app/composables/asyncData").PickFrom<T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate extends infer T_4 ? T_4 extends T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate ? T_4 extends void ? unknown : T_4 : never : never, import("nuxt/dist/app/composables/asyncData").KeysOf<T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate extends infer T_5 ? T_5 extends T & import("microcms-js-sdk").MicroCMSContentId & import("microcms-js-sdk").MicroCMSDate ? T_5 extends void ? unknown : T_5 : never : never>> | null, FetchError<any> | null>;
export declare const useMicroCMSGetObject: <T>({ endpoint, queries }: MicroCMSGetObjectArgs, fetchOptions?: import("nuxt/app").UseFetchOptions<T & import("microcms-js-sdk").MicroCMSDate extends infer T_1 ? T_1 extends T & import("microcms-js-sdk").MicroCMSDate ? T_1 extends void ? unknown : T_1 : never : never, T & import("microcms-js-sdk").MicroCMSDate extends infer T_2 ? T_2 extends T & import("microcms-js-sdk").MicroCMSDate ? T_2 extends void ? unknown : T_2 : never : never, import("nuxt/dist/app/composables/asyncData").KeysOf<T & import("microcms-js-sdk").MicroCMSDate extends infer T_3 ? T_3 extends T & import("microcms-js-sdk").MicroCMSDate ? T_3 extends void ? unknown : T_3 : never : never>, null, string, "get"> | undefined) => import("nuxt/app").AsyncData<import("nuxt/dist/app/composables/asyncData").PickFrom<T & import("microcms-js-sdk").MicroCMSDate extends infer T_4 ? T_4 extends T & import("microcms-js-sdk").MicroCMSDate ? T_4 extends void ? unknown : T_4 : never : never, import("nuxt/dist/app/composables/asyncData").KeysOf<T & import("microcms-js-sdk").MicroCMSDate extends infer T_5 ? T_5 extends T & import("microcms-js-sdk").MicroCMSDate ? T_5 extends void ? unknown : T_5 : never : never>> | null, FetchError<any> | null>;
export {};
