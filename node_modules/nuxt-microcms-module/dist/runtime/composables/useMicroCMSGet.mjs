import { useFetch, useRuntimeConfig } from "nuxt/app";
import { computed } from "vue";
import { useMicroCMSUrl } from "./useMicroCMSUrl.mjs";
const method = "GET";
const useMicroCMSGet = ({ url, queries }, fetchOptions = {}) => {
  const baseURL = useMicroCMSUrl();
  const config = useRuntimeConfig();
  const query = computed(
    () => queries ? {
      ...queries,
      fields: queries.fields?.toString(),
      ids: queries.ids?.toString()
    } : void 0
  );
  return useFetch(url, {
    ...fetchOptions,
    baseURL,
    query,
    headers: {
      "X-MICROCMS-API-KEY": config.microCMS ? config.microCMS.apiKey : config.public.microCMS.apiKey,
      ...fetchOptions.headers
    },
    method
  });
};
export const useMicroCMSGetList = ({ endpoint, queries }, fetchOptions = {}) => {
  return useMicroCMSGet(
    { url: endpoint, queries },
    fetchOptions
  );
};
export const useMicroCMSGetListDetail = ({ endpoint, contentId, queries }, fetchOptions = {}) => {
  return useMicroCMSGet(
    { url: `${endpoint}/${contentId}`, queries },
    fetchOptions
  );
};
export const useMicroCMSGetObject = ({ endpoint, queries }, fetchOptions = {}) => {
  return useMicroCMSGet(
    { url: endpoint, queries },
    fetchOptions
  );
};
